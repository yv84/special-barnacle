node('jnlp-slave') {

    stage('Clone') {
        echo "1.Clone Stage"
        git url: "http://gogs.git-gogs.svc.cluster.local:3000/yv84/special-barnacle.git"
        sh "git clean -d -f"
        script {
            build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
        }
    }
    
    
    stage('BuildDocker') {
        echo "3.Build Docker Image Stage"
        dir ('studious-spoon/psql/liquidbase') {
            sh "sudo docker build -t sbarnacle/psql-lb-job:${build_tag} ."
        }
    }

    stage('PushPocker') {
        echo "4.Push Docker Image Stage"
        withCredentials([usernamePassword(credentialsId: 'myregistrydomain.com', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
            sh "docker login -u ${USERNAME} -p ${PASSWORD} https://myregistrydomain.com:5000"
            sh "docker tag sbarnacle/psql-lb-job:${build_tag} myregistrydomain.com:5000/sbarnacle/psql-lb-job:${build_tag}"
            sh "docker push myregistrydomain.com:5000/sbarnacle/psql-lb-job:${build_tag}"
        }
    }
    

    stage('Deploy kube') {
        echo "3.Build Docker Image Stage"
        dir ('studious-spoon/psql/liquidbase') {
            sh "kubectl apply -f psql-lb-job.yaml"
            
            sh "cp -f psql-lb-job.yaml psql-lb-job-temp.yaml"
            sh "sed -i 's/<BUILD_TAG>/${build_tag}/' psql-lb-job-temp.yaml"
            sh "kubectl delete job --ignore-not-found=true -n sbarnacle psql-lb-job"
            sh "kubectl apply -f psql-lb-job-temp.yaml"
            sh "rm psql-lb-job-temp.yaml"
        }
    }
    
    stage('Clean up') {
        echo "5. Clean up"
        deleteDir()
    }
    

}